{"version":3,"sources":["logo.svg","videos/demo.mov","componets/home/HomePage.js","videos/linux-install.mp4","videos/mac-install.mov","videos/windows-install.mp4","componets/download/DownloadPage.js","componets/App.js","reportWebVitals.js","index.js"],"names":["HomePage","history","useHistory","className","src","logo","alt","onClick","push","loop","muted","controls","autoPlay","demo","type","href","DownloadPage","useState","key","setkey","Tabs","id","activeKey","onSelect","Tab","title","eventKey","downloadUrls","mac","macInstall","windows","windowsInstall","linux","downloadLinux","App","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"snBAAe,MAA0B,iCCA1B,G,MAAA,IAA0B,kC,OCqC1BA,MAhCf,WAEI,IAAMC,EAAUC,cAMhB,OACI,qBAAKC,UAAU,MAAf,SACI,yBAAQA,UAAU,aAAlB,UACI,oBAAIA,UAAU,QAAd,2BACA,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,wBAAQH,UAAU,yBAAyBI,QAT9B,WACrBN,EAAQO,KAAK,cAQL,sBAIA,sBAAKL,UAAU,UAAf,UACI,wDACA,6KAGJ,uBAAOM,MAAI,EAACC,OAAK,EAACC,UAAQ,EAACC,UAAQ,EAAnC,SACI,wBAAQR,IAAKS,EAAMC,KAAK,gBAE5B,6CACA,+FAAiE,mBAAGC,KAAK,mCAAR,yBAAjE,a,gCC/BD,MAA0B,0CCA1B,MAA0B,wC,QCA1B,MAA0B,4CC2C1BC,MAlCf,WAAyB,IAAD,EACEC,mBAAS,OADX,mBACbC,EADa,KACRC,EADQ,KAEpB,OACI,qBAAKhB,UAAU,eAAf,SACI,mCACI,qBAAKC,IAAKC,EAAMF,UAAU,gBAAgBG,IAAI,SAC9C,oBAAIH,UAAU,kBAAd,oCACA,eAACiB,EAAA,EAAD,CAAMC,GAAG,YAAYC,UAAWJ,EAAKK,SAAU,SAACL,GAAD,OAASC,EAAOD,IAAMf,UAAU,gBAA/E,UAEI,eAACqB,EAAA,EAAD,CAAKC,MAAM,QAAQC,SAAS,MAA5B,UACI,mBAAGX,KAAMY,EAAaC,IAAMzB,UAAU,yBAAtC,sBACA,uBAAOM,MAAI,EAACC,OAAK,EAACC,UAAQ,EAA1B,SACI,wBAAQP,IAAKyB,EAAYf,KAAK,mBAGtC,eAACU,EAAA,EAAD,CAAKC,MAAM,UAAUC,SAAS,MAA9B,UACI,mBAAGX,KAAMY,EAAaG,QAAU3B,UAAU,yBAA1C,sBACA,uBAAOM,MAAI,EAACC,OAAK,EAACC,UAAQ,EAA1B,SACI,wBAAQP,IAAK2B,EAAgBjB,KAAK,gBAEtC,4DAEJ,eAACU,EAAA,EAAD,CAAKC,MAAM,QAAQC,SAAS,OAA5B,UACI,mBAAGX,KAAMY,EAAaK,MAAO7B,UAAU,yBAAvC,sBACA,uBAAOM,MAAI,EAACC,OAAK,EAACC,UAAQ,EAA1B,SACI,wBAAQP,IAAK6B,EAAenB,KAAK,4BCpB9CoB,MATf,WACE,OACI,eAAC,IAAD,CAAYC,SAAS,IAArB,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWtC,IACjC,cAAC,IAAD,CAAOqC,KAAK,YAAYC,UAAWtB,QCG5BuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e26c3fd1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.3e929941.svg\";","export default __webpack_public_path__ + \"static/media/demo.be4d2653.mov\";","import logo from '../../logo.svg';\nimport './HomePage.css';\nimport {useHistory} from \"react-router-dom\";\nimport demo from '../../videos/demo.mov';\n\nfunction HomePage() {\n\n    const history = useHistory();\n\n    const routeToDownloads = () => {\n        history.push('/download');\n    }\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <h1 className=\"title\">sQReen Reader</h1>\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <button className=\"btn btn-primary btn-lg\" onClick={routeToDownloads}>\n                    Download\n                </button>\n\n                <div className=\"summary\">\n                    <h2>What is sQreen Reader?</h2>\n                    <p>sQReen Reader is a desktop tool that watches your screen for QR codes and gives you a way to open\n                        the hyperlinks embedded in the QR code.</p>\n                </div>\n                <video loop muted controls autoPlay>\n                    <source src={demo} type='video/mp4' />\n                </video>\n                <h2>Open Source</h2>\n                <p>sQreen Reader is open source. The source code can be found on <a href=\"https://github.com/sqreen-reader\">github.com.</a> </p>\n            </header>\n        </div>\n    );\n}\n\nexport default HomePage;\n","export default __webpack_public_path__ + \"static/media/linux-install.0aaae9c0.mp4\";","export default __webpack_public_path__ + \"static/media/mac-install.a56916f5.mov\";","export default __webpack_public_path__ + \"static/media/windows-install.e3e5e348.mp4\";","import './DownloadPage.css';\nimport {Tabs, Tab} from 'react-bootstrap';\nimport {useState} from \"react\";\nimport logo from '../../logo.svg';\nimport downloadLinux from '../../videos/linux-install.mp4';\nimport macInstall from '../../videos/mac-install.mov';\nimport downloadUrls from './download-urls.json';\nimport windowsInstall from '../../videos/windows-install.mp4';\n\nfunction DownloadPage() {\n    const [key, setkey] = useState('mac');\n    return (\n        <div className='DownloadPage'>\n            <header>\n                <img src={logo} className=\"Download-logo\" alt=\"logo\" />\n                <h1 className='Download-header'>Download sQReen Reader</h1>\n                <Tabs id='downloads' activeKey={key} onSelect={(key) => setkey(key)} className='Download-Tabs'>\n\n                    <Tab title='macOS' eventKey='mac'>\n                        <a href={downloadUrls.mac}  className='btn btn-primary btn-lg'>Download</a>\n                        <video loop muted controls>\n                            <source src={macInstall} type='video/mp4' />\n                        </video>\n                    </Tab>\n                    <Tab title='Windows' eventKey='win'>\n                        <a href={downloadUrls.windows}  className='btn btn-primary btn-lg'>Download</a>\n                        <video loop muted controls>\n                            <source src={windowsInstall} type='video/mp4' />\n                        </video>\n                        <p>Note: exe is not signed.</p>\n                    </Tab>\n                    <Tab title='Linux' eventKey='java'>\n                        <a href={downloadUrls.linux} className='btn btn-primary btn-lg'>Download</a>\n                        <video loop muted controls>\n                            <source src={downloadLinux} type='video/mp4' />\n                        </video>\n                    </Tab>\n                </Tabs>\n            </header>\n        </div>\n    )\n}\n\nexport default DownloadPage;\n","import {HashRouter, Route} from \"react-router-dom\";\nimport HomePage from \"./home/HomePage\";\nimport DownloadPage from \"./download/DownloadPage\";\n\n\nfunction App() {\n  return (\n      <HashRouter basename='/'>\n        <Route exact path='/' component={HomePage} />\n        <Route path=\"/download\" component={DownloadPage} />\n      </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './componets/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}